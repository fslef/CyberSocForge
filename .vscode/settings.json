{
    "[markdown]": {
        "files.encoding": "utf8",
        "files.trimTrailingWhitespace": false
    },
    "cSpell.words": [
        "CyberSocForge",
        "ICONURI",
        "LICENSEURI",
        "PROJECTURI",
        "RELEASENOTES",
        "buildhelpers",
        "endregion",
        "gitversion",
        "icontains",
        "keepachangelog",
        "notin",
        "pscmdlet",
        "steppable"
    ],
    "editor.autoClosingBrackets": "always",
    "editor.bracketPairColorization.enabled": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file",
    "editor.formatOnType": true,
    "editor.guides.bracketPairs": true,
    "editor.inlineSuggest.enabled": true,
    "editor.mouseWheelZoom": true,
    "editor.renderWhitespace": "all",
    "editor.rulers": [
        100
    ],
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 100,
    "files.associations": {
        "*.ps1xml": "xml"
    },
    "files.defaultLanguage": "powershell",
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "git.autofetch": true,
    "powershell.codeFolding.enable": true,
    "powershell.codeFolding.showLastLine": true,
    "powershell.codeFormatting.addWhitespaceAroundPipe": true,
    "powershell.codeFormatting.alignPropertyValuePairs": true,
    "powershell.codeFormatting.autoCorrectAliases": true,
    "powershell.codeFormatting.avoidSemicolonsAsLineTerminators": true,
    "powershell.codeFormatting.blankLinesAroundCommentHelpBlock": true,
    "powershell.codeFormatting.blankLinesAroundFunctionDefinitionBody": true,
    "powershell.codeFormatting.blankLinesAroundPipeline": true,
    "powershell.codeFormatting.blankLinesAroundRegion": true,
    "powershell.codeFormatting.blankLinesBeforeCloseBrace": true,
    "powershell.codeFormatting.blankLinesBeforeFirstLine": true,
    "powershell.codeFormatting.blankLinesBeforeOpenBrace": true,
    "powershell.codeFormatting.blankLinesBetweenMemberDefinition": true,
    "powershell.codeFormatting.blankLinesBetweenUsings": true,
    "powershell.codeFormatting.collapseBracesToIndentation": true,
    "powershell.codeFormatting.collapsePipeline": true,
    "powershell.codeFormatting.ignoreOneLineBlock": false,
    "powershell.codeFormatting.newLineAfterCloseBrace": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInBlock": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInElse": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInFunction": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInIf": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInSwitch": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInTry": true,
    "powershell.codeFormatting.newLineAfterCloseBraceInWhile": true,
    "powershell.codeFormatting.newLineAfterColonInHashtable": true,
    "powershell.codeFormatting.newLineAfterComma": true,
    "powershell.codeFormatting.newLineAfterDoWhile": true,
    "powershell.codeFormatting.newLineAfterFor": true,
    "powershell.codeFormatting.newLineAfterForEach": true,
    "powershell.codeFormatting.newLineAfterIf": true,
    "powershell.codeFormatting.newLineAfterOpenBrace": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInBlock": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInElse": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInFunction": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInIf": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInSwitch": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInTry": true,
    "powershell.codeFormatting.newLineAfterOpenBraceInWhile": true,
    "powershell.codeFormatting.newLineAfterSwitch": true,
    "powershell.codeFormatting.newLineAfterTry": true,
    "powershell.codeFormatting.newLineAfterWhile": true,
    "powershell.codeFormatting.newLineBeforeCatch": true,
    "powershell.codeFormatting.newLineBeforeCloseBrace": true,
    "powershell.codeFormatting.newLineBeforeElse": true,
    "powershell.codeFormatting.newLineBeforeElseIf": true,
    "powershell.codeFormatting.newLineBeforeFinally": true,
    "powershell.codeFormatting.newLineBetweenTypeDefinitionMembers": true,
    "powershell.codeFormatting.openBraceOnSameLine": false,
    "powershell.codeFormatting.pipelineIndentation": 4,
    "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationAfterEveryPipeline",
    "powershell.codeFormatting.preset": "Custom",
    "powershell.codeFormatting.spaceAfterComma": true,
    "powershell.codeFormatting.spaceAfterSemicolon": true,
    "powershell.codeFormatting.spaceAroundOperator": true,
    "powershell.codeFormatting.spaceBeforeComma": true,
    "powershell.codeFormatting.spaceBeforeSemicolon": true,
    "powershell.codeFormatting.spaceBetweenEmptyBraces": true,
    "powershell.codeFormatting.spaceBetweenEmptyParenthesis": true,
    "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
    "powershell.codeFormatting.useConsistentIndentation": true,
    "powershell.codeFormatting.useConsistentWhitespace": true,
    "powershell.codeFormatting.useCorrectCasing": true,
    "powershell.codeFormatting.useCorrectCasingForAttribute": true,
    "powershell.codeFormatting.useCorrectCasingForClass": true,
    "powershell.codeFormatting.useCorrectCasingForCommand": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelp": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpClass": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpComponent": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpDSCResource": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpEnum": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpExample": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpForwardHelpCategory": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpForwardHelpTargetName": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpFunction": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpFunctionality": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpInputs": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpInterface": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpKeyword": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpLink": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpModule": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpNotes": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpOutputs": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpParameter": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpParameterSet": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpRole": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpType": true,
    "powershell.codeFormatting.useCorrectCasingForCommentHelpWorkflow": true,
    "powershell.codeFormatting.useCorrectCasingForDSCResource": true,
    "powershell.codeFormatting.useCorrectCasingForDSCResourceParameter": true,
    "powershell.codeFormatting.useCorrectCasingForEnum": true,
    "powershell.codeFormatting.useCorrectCasingForEnumMember": true,
    "powershell.codeFormatting.useCorrectCasingForFunction": true,
    "powershell.codeFormatting.useCorrectCasingForInterface": true,
    "powershell.codeFormatting.useCorrectCasingForKeyword": true,
    "powershell.codeFormatting.useCorrectCasingForMethod": true,
    "powershell.codeFormatting.useCorrectCasingForModule": true,
    "powershell.codeFormatting.useCorrectCasingForNamespace": true,
    "powershell.codeFormatting.useCorrectCasingForParameter": true,
    "powershell.codeFormatting.useCorrectCasingForParameterSet": true,
    "powershell.codeFormatting.useCorrectCasingForProperty": true,
    "powershell.codeFormatting.useCorrectCasingForType": true,
    "powershell.codeFormatting.useCorrectCasingForVariable": true,
    "powershell.codeFormatting.useCorrectCasingForVariableInForLoop": true,
    "powershell.codeFormatting.useCorrectCasingForWorkflow": true,
    "powershell.codeFormatting.whitespaceAfterSeparator": true,
    "powershell.codeFormatting.whitespaceAroundOperator": true,
    "powershell.codeFormatting.whitespaceBeforeOpenBrace": true,
    "powershell.codeFormatting.whitespaceBeforeOpenParen": true,
    // "powershell.codeFormatting.useConstantStrings": true,
    "powershell.codeFormatting.whitespaceBetweenParameters": true,
    "powershell.codeFormatting.whitespaceInsideBrace": true,
    "powershell.developer.bundledModulesPath": "${cwd}/output/RequiredModules",
    "powershell.enableReferencesCodeLens": true,
    "powershell.integratedConsole.focusConsoleOnExecute": true,
    "powershell.scriptAnalysis.enable": true,
    "powershell.scriptAnalysis.settingsPath": ".vscode\\analyzersettings.psd1",
    "window.title": "CyberSocForge"
}